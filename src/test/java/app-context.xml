<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-3.0.xsd
              http://www.springframework.org/schema/jee
              http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
              http://www.springframework.org/schema/jms
              http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
              http://www.springframework.org/schema/lang
              http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
              http://www.springframework.org/schema/tx
              http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
              http://www.springframework.org/schema/util
              http://www.springframework.org/schema/util/spring-util-3.0.xsd
              http://www.springframework.org/schema/jdbc 
              http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<aop:aspectj-autoproxy />

	<context:annotation-config />
	
	<util:properties id="systemProperties" location="classpath:/META-INF/properties/systemproperties.properties" />

	<context:component-scan
		base-package="org.openinfinity" />

<!-- 	<bean id="service" -->
<!-- 		class="org.openinfinity.integration.service.activator.stubs.ExampleService" /> -->

	<!-- Creates an in-memory database populated with test data for fast testing -->
	<jdbc:embedded-database id="dataSource">
		<jdbc:script location="classpath:/sql/schema.sql" />
		<jdbc:script location="classpath:/sql/test-data.sql" />
	</jdbc:embedded-database>

	<!-- <bean id="serviceActivatorConfiguration" -->
	<!-- class="org.openinfinity.integration.service.activator.proxy.ServiceActivatorConfiguration" 
		/> -->

	<bean
		class="org.openinfinity.integration.service.activator.OriginalServiceActivatorBeanPostProcessor"
		depends-on="dataSource">
		<!-- <property name="serviceActivatorConfiguration" ref="serviceActivatorConfiguration" 
			/> -->
	</bean>

<bean id="testService1ProxyFactory"
		class="org.openinfinity.integration.service.activator.proxy.ProxyFactory"
		factory-method="newInstance" scope="singleton">
		<!-- test org.wide.engine.FooService -->
		<constructor-arg type="java.lang.Class"
			value="org.openinfinity.integration.service.activator.stubs.TestService" />
		<constructor-arg>
			<bean id="testService1ActivatorInvocationHandler"
				class="org.openinfinity.integration.service.activator.proxy.ServiceActivatorInvocationHandler">
				<constructor-arg>
					<bean
						class="org.openinfinity.integration.service.activator.stubs.ServiceActivatorImpl" />
				</constructor-arg>
				<constructor-arg type="java.lang.String"
					value="org.openinfinity.integration.service.activator.stubs.TestService" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="accountServiceProxyFactory"
		class="org.openinfinity.integration.service.activator.proxy.ProxyFactory"
		factory-method="newInstance" scope="singleton">
		<constructor-arg type="java.lang.Class"
			value="org.openinfinity.integration.service.activator.stubs.AccountService" />
		<constructor-arg>
			<bean id="accountServiceActivatorInvocationHandler"
				class="org.openinfinity.integration.service.activator.proxy.ServiceActivatorInvocationHandler">
				<constructor-arg>
					<bean
						class="org.openinfinity.integration.service.activator.stubs.AccountServiceServiceActivator" />
				</constructor-arg>
				<constructor-arg type="java.lang.String"
					value="org.openinfinity.integration.service.activator.stubs.AccountService" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- <bean id="testService1ProxyFactory" -->
	<!-- class="org.openinfinity.integration.service.activator.proxy.ProxyFactory" -->
	<!-- factory-method="newInstance" scope="singleton"> -->
	<!-- <constructor-arg type="java.lang.Class" -->
	<!-- value="org.openinfinity.integration.service.activator.stubs.TestService" 
		/> -->
	<!-- <constructor-arg> -->
	<!-- <bean id="testService1ActivatorInvocationHandler" -->
	<!-- class="org.openinfinity.integration.service.activator.proxy.ServiceActivatorInvocationHandler"> -->
	<!-- <constructor-arg> -->
	<!-- <bean class="org.openinfinity.integration.service.activator.stubs.ServiceActivatorImpl" 
		/> -->
	<!-- </constructor-arg> -->
	<!-- </bean> -->
	<!-- </constructor-arg> -->
	<!-- </bean> -->

	<!-- <bean id="accountServiceProxyFactory" -->
	<!-- class="org.openinfinity.integration.service.activator.proxy.ProxyFactory" -->
	<!-- factory-method="newInstance" scope="singleton"> -->
	<!-- <constructor-arg type="java.lang.Class" -->
	<!-- value="org.openinfinity.integration.service.activator.stubs.AccountService" 
		/> -->
	<!-- <constructor-arg> -->
	<!-- <bean id="accountServiceActivatorInvocationHandler" -->
	<!-- class="org.openinfinity.integration.service.activator.proxy.ServiceActivatorInvocationHandler"> -->
	<!-- <constructor-arg> -->
	<!-- <bean -->
	<!-- class="org.openinfinity.integration.service.activator.stubs.AccountServiceServiceActivator" 
		/> -->
	<!-- </constructor-arg> -->
	<!-- </bean> -->
	<!-- </constructor-arg> -->
	<!-- </bean> -->



	<!-- <bean id="serviceActivatorRegistry" -->
	<!-- class="org.openinfinity.integration.service.activator.MemoryServiceActivatorRegistry"> -->
	<!-- <property name="serviceActivators"> -->
	<!-- <list> -->
	<!-- <ref bean="testService1ProxyFactory" /> -->
	<!-- <ref bean="accountServiceProxyFactory" /> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

</beans>
